슬레이 더 스파이어를 오마주한 게임을 개발하려면, 먼저 Unity 6와 C#을 사용한 게임 코드 구조 설계에 대한 이해가 필요합니다.

### 1. CCG Kit 구조 분석

#### Architecture 폴더
- Events: 이벤트 기반 통신 시스템
  - GameEventInt: 정수형 이벤트 (HP, 골드 등 변경)
- Listeners: 이벤트 리스너들
  - GameEventIntListener: 정수형 이벤트 구독/처리
- Variables: 게임 변수 관리
  - IntVariable: HP, 마나 등의 정수형 변수 관리

#### Runtime 폴더
- RuntimeCharacter: 전투 중 캐릭터 상태 관리
- RuntimeCard: 전투 중 카드 상태 관리
- GameBootstrap: 게임/전투 씬 초기화

#### Systems 폴더
- CharacterDeathSystem: 캐릭터 사망 처리
- EffectResolutionSystem: 카드 효과 처리
- TurnManagementSystem: 턴 진행 관리

#### UI 폴더
- HpWidget: 체력 표시 UI
- RewardPopup: 전투 승리 보상 UI

### 2. 게임 핵심 시스템

#### 이벤트 시스템
- GameEvent를 통한 느슨한 결합
- 변수 변경 감지 및 UI 업데이트
- 시스템 간 통신

#### 전투 시스템
- 턴 기반 전투
- 카드 효과 처리
- 캐릭터 상태 관리

#### UI 시스템
- 캔버스 기반 UI 구조
- 팝업 시스템
- 전투 정보 표시

### 3. 데이터 구조

#### 캐릭터 데이터
- 체력, 마나 등 기본 스탯
- 상태 효과 (버프/디버프)
- 덱 정보

#### 카드 데이터
- 카드 이름, 설명
- 비용, 효과
- 카드 타입 (공격, 방어, 스킬 등)

#### 전투 데이터
- 턴 정보
- 적 의도
- 전투 상태

### 4. 반복적 사고 과정

#### 개발 프로세스
- 프로토타입 제작 및 테스트
- 피드백 수집 및 분석
- 기능 개선 및 버그 수정
- 성능 최적화

#### 코드 관리
- 깃허브를 통한 버전 관리
- 코드 리뷰 및 리팩토링
- 문서화 및 주석 작성

### 5. 유저 데이터 관리

#### 게임 진행 데이터
1. 카드 모음: 획득한 모든 카드
2. 유물: 수집한 유물 목록
3. HP: 현재/최대 체력
4. 소비아이템: 포션 등 소비품

#### 통계 데이터
5. 누적 공격 데미지
6. 닉네임
7. 게임 횟수
8. 카드 드로우 횟수
9. 공격 횟수
10. 누적 피해 데미지
11. 총 점수
12. 최고 점수

이 가이드를 통해 CCG Kit의 구조를 이해하고, 효율적인 게임 개발을 진행할 수 있습니다.
